{"plane": "fllm-plane", "resources": [{"id": "/instances/{}/providers/foundationallm.vectorization/vectorizationrequests/{}", "version": "2024-02-16", "swagger": "fllm-plane/fllm/ResourceProviders/FoundationaLLM.Vectorization/Paths/L2luc3RhbmNlcy97aW5zdGFuY2VJZH0vcHJvdmlkZXJzL0ZvdW5kYXRpb25hTExNLlZlY3Rvcml6YXRpb24vdmVjdG9yaXphdGlvbnJlcXVlc3RzL3tuYW1lfQ==/V/MjAyNC0wMi0xNg=="}], "commandGroups": [{"name": "vectorization vectorizationrequest", "commands": [{"name": "show", "version": "2024-02-16", "resources": [{"id": "/instances/{}/providers/foundationallm.vectorization/vectorizationrequests/{}", "version": "2024-02-16", "swagger": "fllm-plane/fllm/ResourceProviders/FoundationaLLM.Vectorization/Paths/L2luc3RhbmNlcy97aW5zdGFuY2VJZH0vcHJvdmlkZXJzL0ZvdW5kYXRpb25hTExNLlZlY3Rvcml6YXRpb24vdmVjdG9yaXphdGlvbnJlcXVlc3RzL3tuYW1lfQ==/V/MjAyNC0wMi0xNg=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.instanceId", "options": ["instance-id"], "required": true}, {"type": "string", "var": "$Path.name", "options": ["name"], "required": true}]}], "operations": [{"operationId": "vectorizationrequests_Get", "http": {"path": "/instances/{instanceId}/providers/FoundationaLLM.Vectorization/vectorizationrequests/{name}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "instanceId", "arg": "$Path.instanceId", "required": true}, {"type": "string", "name": "name", "arg": "$Path.name", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-02-16"}, "type": "string", "name": "api-version"}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "array<object>", "item": {"type": "object", "props": [{"type": "@VectorizationStep_read", "name": "Item"}, {"type": "string", "name": "completed_steps"}, {"type": "object", "name": "content_identifier", "props": [{"type": "string", "name": "canonical_id"}, {"type": "string", "name": "content_source_profile_name"}, {"type": "string", "name": "multipart_id"}]}, {"type": "string", "name": "id"}, {"type": "string", "name": "object_id"}, {"type": "string", "name": "processing_type", "enum": {"items": [{"value": "Asynchronous"}, {"value": "Synchronous"}]}}, {"type": "string", "name": "remaining_steps"}, {"type": "array<object>", "name": "steps", "item": {"type": "object", "props": [{"type": "string", "name": "id"}, {"type": "object", "name": "parameters", "additionalProps": {"item": {"type": "string"}}}], "cls": "VectorizationStep_read"}}]}}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "array", "ref": "$Instance", "clientFlatten": true}]}, {"name": "delete", "version": "2024-02-16", "resources": [{"id": "/instances/{}/providers/foundationallm.vectorization/vectorizationrequests/{}", "version": "2024-02-16", "swagger": "fllm-plane/fllm/ResourceProviders/FoundationaLLM.Vectorization/Paths/L2luc3RhbmNlcy97aW5zdGFuY2VJZH0vcHJvdmlkZXJzL0ZvdW5kYXRpb25hTExNLlZlY3Rvcml6YXRpb24vdmVjdG9yaXphdGlvbnJlcXVlc3RzL3tuYW1lfQ==/V/MjAyNC0wMi0xNg=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.instanceId", "options": ["instance-id"], "required": true}, {"type": "string", "var": "$Path.name", "options": ["name"], "required": true}]}], "operations": [{"operationId": "vectorizationrequests_Delete", "http": {"path": "/instances/{instanceId}/providers/FoundationaLLM.Vectorization/vectorizationrequests/{name}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "instanceId", "arg": "$Path.instanceId", "required": true}, {"type": "string", "name": "name", "arg": "$Path.name", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-02-16"}, "type": "string", "name": "api-version"}]}}, "responses": [{"statusCode": [200]}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "confirmation": "Are you sure you want to perform this operation?"}, {"name": "upsert", "version": "2024-02-16", "resources": [{"id": "/instances/{}/providers/foundationallm.vectorization/vectorizationrequests/{}", "version": "2024-02-16", "swagger": "fllm-plane/fllm/ResourceProviders/FoundationaLLM.Vectorization/Paths/L2luc3RhbmNlcy97aW5zdGFuY2VJZH0vcHJvdmlkZXJzL0ZvdW5kYXRpb25hTExNLlZlY3Rvcml6YXRpb24vdmVjdG9yaXphdGlvbnJlcXVlc3RzL3tuYW1lfQ==/V/MjAyNC0wMi0xNg=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.instanceId", "options": ["instance-id"], "required": true}, {"type": "string", "var": "$Path.name", "options": ["name"], "required": true}, {"blank": {"value": {}}, "type": "object", "var": "$body", "options": ["body"], "help": {"short": "VectorizationRequest"}, "args": [{"type": "@VectorizationStep_create", "var": "$body.Item", "options": ["item"]}, {"type": "string", "var": "$body.completed_steps", "options": ["completed-steps"]}, {"type": "object", "var": "$body.content_identifier", "options": ["content-identifier"], "help": {"short": "ContentIdentifier"}, "args": [{"type": "string", "var": "$body.content_identifier.canonical_id", "options": ["canonical-id"]}, {"type": "string", "var": "$body.content_identifier.content_source_profile_name", "options": ["content-source-profile-name"]}, {"type": "string", "var": "$body.content_identifier.multipart_id", "options": ["multipart-id"]}]}, {"type": "string", "var": "$body.id", "options": ["id"]}, {"type": "string", "var": "$body.object_id", "options": ["object-id"]}, {"type": "string", "var": "$body.processing_type", "options": ["processing-type"], "help": {"short": "VectorizationProcessingType"}, "enum": {"items": [{"name": "Asynchronous", "value": "Asynchronous"}, {"name": "Synchronous", "value": "Synchronous"}]}}, {"type": "string", "var": "$body.remaining_steps", "options": ["remaining-steps"]}, {"type": "array<object>", "var": "$body.steps", "options": ["steps"], "item": {"type": "object", "args": [{"type": "string", "var": "@VectorizationStep_create.id", "options": ["id"]}, {"type": "object", "var": "@VectorizationStep_create.parameters", "options": ["parameters"], "additionalProps": {"item": {"type": "string"}}}], "cls": "VectorizationStep_create"}}]}]}], "operations": [{"operationId": "vectorizationrequests_Upsert", "http": {"path": "/instances/{instanceId}/providers/FoundationaLLM.Vectorization/vectorizationrequests/{name}", "request": {"method": "post", "path": {"params": [{"type": "string", "name": "instanceId", "arg": "$Path.instanceId", "required": true}, {"type": "string", "name": "name", "arg": "$Path.name", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-02-16"}, "type": "string", "name": "api-version"}]}, "body": {"json": {"schema": {"type": "object", "name": "body", "arg": "$body", "props": [{"type": "@VectorizationStep_create", "name": "Item", "arg": "$body.Item"}, {"type": "string", "name": "completed_steps", "arg": "$body.completed_steps"}, {"type": "object", "name": "content_identifier", "arg": "$body.content_identifier", "props": [{"type": "string", "name": "canonical_id", "arg": "$body.content_identifier.canonical_id"}, {"type": "string", "name": "content_source_profile_name", "arg": "$body.content_identifier.content_source_profile_name"}, {"type": "string", "name": "multipart_id", "arg": "$body.content_identifier.multipart_id"}]}, {"type": "string", "name": "id", "arg": "$body.id"}, {"type": "string", "name": "object_id", "arg": "$body.object_id"}, {"type": "string", "name": "processing_type", "arg": "$body.processing_type", "enum": {"items": [{"value": "Asynchronous"}, {"value": "Synchronous"}]}}, {"type": "string", "name": "remaining_steps", "arg": "$body.remaining_steps"}, {"type": "array<object>", "name": "steps", "arg": "$body.steps", "item": {"type": "object", "props": [{"type": "string", "name": "id", "arg": "@VectorizationStep_create.id"}, {"type": "object", "name": "parameters", "arg": "@VectorizationStep_create.parameters", "additionalProps": {"item": {"type": "string"}}}], "cls": "VectorizationStep_create"}}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"type": "string", "name": "error_message"}, {"type": "boolean", "name": "is_success"}, {"type": "string", "name": "object_id"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}]}]}