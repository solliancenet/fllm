{"plane": "fllm-plane", "resources": [{"id": "/instances/{}/providers/foundationallm.vectorization/vectorizationrequests/{}", "version": "2024-02-16", "swagger": "fllm-plane/fllm/ResourceProviders/FoundationaLLM.Agent/Paths/L2luc3RhbmNlcy97aW5zdGFuY2VJZH0vcHJvdmlkZXJzL0ZvdW5kYXRpb25hTExNLlZlY3Rvcml6YXRpb24vdmVjdG9yaXphdGlvbnJlcXVlc3RzL3tuYW1lfQ==/V/MjAyNC0wMi0xNg=="}], "commandGroups": [{"name": "vectorization vectorizationrequest", "commands": [{"name": "show", "version": "2024-02-16", "resources": [{"id": "/instances/{}/providers/foundationallm.vectorization/vectorizationrequests/{}", "version": "2024-02-16", "swagger": "fllm-plane/fllm/ResourceProviders/FoundationaLLM.Agent/Paths/L2luc3RhbmNlcy97aW5zdGFuY2VJZH0vcHJvdmlkZXJzL0ZvdW5kYXRpb25hTExNLlZlY3Rvcml6YXRpb24vdmVjdG9yaXphdGlvbnJlcXVlc3RzL3tuYW1lfQ==/V/MjAyNC0wMi0xNg=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.instanceId", "options": ["instance-id"], "required": true}, {"type": "string", "var": "$Path.name", "options": ["name"], "required": true}]}], "operations": [{"operationId": "vectorizationrequests_Get", "http": {"path": "/instances/{instanceId}/providers/FoundationaLLM.Vectorization/vectorizationrequests/{name}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "instanceId", "arg": "$Path.instanceId", "required": true}, {"type": "string", "name": "name", "arg": "$Path.name", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-02-16"}, "type": "string", "name": "api-version"}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "array<object>", "item": {"type": "object", "props": [{"readOnly": true, "type": "boolean", "name": "complete"}, {"type": "array<string>", "name": "completedSteps", "item": {"type": "string"}}, {"type": "object", "name": "contentIdentifier", "props": [{"type": "string", "name": "canonicalId"}, {"type": "string", "name": "contentSourceProfileName"}, {"readOnly": true, "type": "string", "name": "fileName"}, {"type": "array<string>", "name": "multipartId", "item": {"type": "string"}}, {"readOnly": true, "type": "string", "name": "uniqueId"}]}, {"readOnly": true, "type": "string", "name": "currentStep"}, {"type": "string", "name": "id"}, {"type": "string", "name": "objectId"}, {"type": "integer32", "name": "processingType", "enum": {"items": [{"value": 0}, {"value": 1}]}}, {"type": "array<string>", "name": "remainingSteps", "item": {"type": "string"}}, {"type": "array<object>", "name": "steps", "item": {"type": "object", "props": [{"type": "string", "name": "id"}, {"type": "object", "name": "parameters", "additionalProps": {"item": {"type": "string"}}}]}}]}}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "array", "ref": "$Instance", "clientFlatten": true}]}, {"name": "delete", "version": "2024-02-16", "resources": [{"id": "/instances/{}/providers/foundationallm.vectorization/vectorizationrequests/{}", "version": "2024-02-16", "swagger": "fllm-plane/fllm/ResourceProviders/FoundationaLLM.Agent/Paths/L2luc3RhbmNlcy97aW5zdGFuY2VJZH0vcHJvdmlkZXJzL0ZvdW5kYXRpb25hTExNLlZlY3Rvcml6YXRpb24vdmVjdG9yaXphdGlvbnJlcXVlc3RzL3tuYW1lfQ==/V/MjAyNC0wMi0xNg=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.instanceId", "options": ["instance-id"], "required": true}, {"type": "string", "var": "$Path.name", "options": ["name"], "required": true}]}], "operations": [{"operationId": "vectorizationrequests_Delete", "http": {"path": "/instances/{instanceId}/providers/FoundationaLLM.Vectorization/vectorizationrequests/{name}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "instanceId", "arg": "$Path.instanceId", "required": true}, {"type": "string", "name": "name", "arg": "$Path.name", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-02-16"}, "type": "string", "name": "api-version"}]}}, "responses": [{"statusCode": [200]}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "confirmation": "Are you sure you want to perform this operation?"}, {"name": "upsert", "version": "2024-02-16", "resources": [{"id": "/instances/{}/providers/foundationallm.vectorization/vectorizationrequests/{}", "version": "2024-02-16", "swagger": "fllm-plane/fllm/ResourceProviders/FoundationaLLM.Agent/Paths/L2luc3RhbmNlcy97aW5zdGFuY2VJZH0vcHJvdmlkZXJzL0ZvdW5kYXRpb25hTExNLlZlY3Rvcml6YXRpb24vdmVjdG9yaXphdGlvbnJlcXVlc3RzL3tuYW1lfQ==/V/MjAyNC0wMi0xNg=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.instanceId", "options": ["instance-id"], "required": true}, {"type": "string", "var": "$Path.name", "options": ["name"], "required": true}]}, {"name": "Body", "args": [{"type": "array<string>", "var": "$body.completedSteps", "options": ["completed-steps"], "group": "Body", "item": {"type": "string"}}, {"type": "object", "var": "$body.contentIdentifier", "options": ["content-identifier"], "group": "Body", "args": [{"type": "string", "var": "$body.contentIdentifier.canonicalId", "options": ["canonical-id"]}, {"type": "string", "var": "$body.contentIdentifier.contentSourceProfileName", "options": ["content-source-profile-name"]}, {"type": "array<string>", "var": "$body.contentIdentifier.multipartId", "options": ["multipart-id"], "item": {"type": "string"}}]}, {"type": "string", "var": "$body.id", "options": ["id"], "group": "Body"}, {"type": "string", "var": "$body.objectId", "options": ["object-id"], "group": "Body"}, {"type": "integer32", "var": "$body.processingType", "options": ["processing-type"], "group": "Body", "enum": {"items": [{"name": "0", "value": 0}, {"name": "1", "value": 1}]}}, {"type": "array<string>", "var": "$body.remainingSteps", "options": ["remaining-steps"], "group": "Body", "item": {"type": "string"}}, {"blank": {"value": {}}, "type": "array<object>", "var": "$body.steps", "options": ["steps"], "group": "Body", "item": {"type": "object", "args": [{"type": "string", "var": "$body.steps[].id", "options": ["id"]}, {"type": "object", "var": "$body.steps[].parameters", "options": ["parameters"], "additionalProps": {"item": {"type": "string"}}}]}}]}], "operations": [{"operationId": "vectorizationrequests_Upsert", "http": {"path": "/instances/{instanceId}/providers/FoundationaLLM.Vectorization/vectorizationrequests/{name}", "request": {"method": "post", "path": {"params": [{"type": "string", "name": "instanceId", "arg": "$Path.instanceId", "required": true}, {"type": "string", "name": "name", "arg": "$Path.name", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-02-16"}, "type": "string", "name": "api-version"}]}, "body": {"json": {"schema": {"type": "object", "name": "body", "props": [{"type": "array<string>", "name": "completedSteps", "arg": "$body.completedSteps", "item": {"type": "string"}}, {"type": "object", "name": "contentIdentifier", "arg": "$body.contentIdentifier", "props": [{"type": "string", "name": "canonicalId", "arg": "$body.contentIdentifier.canonicalId"}, {"type": "string", "name": "contentSourceProfileName", "arg": "$body.contentIdentifier.contentSourceProfileName"}, {"type": "array<string>", "name": "multipartId", "arg": "$body.contentIdentifier.multipartId", "item": {"type": "string"}}]}, {"type": "string", "name": "id", "arg": "$body.id"}, {"type": "string", "name": "objectId", "arg": "$body.objectId"}, {"type": "integer32", "name": "processingType", "arg": "$body.processingType", "enum": {"items": [{"value": 0}, {"value": 1}]}}, {"type": "array<string>", "name": "remainingSteps", "arg": "$body.remainingSteps", "item": {"type": "string"}}, {"type": "array<object>", "name": "steps", "arg": "$body.steps", "item": {"type": "object", "props": [{"type": "string", "name": "id", "arg": "$body.steps[].id"}, {"type": "object", "name": "parameters", "arg": "$body.steps[].parameters", "additionalProps": {"item": {"type": "string"}}}]}}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"type": "string", "name": "error_message"}, {"type": "boolean", "name": "is_success"}, {"type": "string", "name": "object_id"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}]}]}